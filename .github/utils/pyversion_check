#!/usr/bin/env python3
# =========================================================================================== #
#  PY_version_check, the script was created to check and validate the version file semantic 
#  the script is static way, not parameters are accepted at this first moment.
#
#  It was necessary to avoid that we accept any kind of version content for inside the repo. 
#  The regex used can be seeing here: https://regex101.com/r/Ly7O1x/3/ based on semver.org
# =========================================================================================== #

import sys
import re

def check_version_file():
    # check if VERSION file exists
    try: 
        with open("VERSION", "r") as file:
            content = file.read()
    except FileNotFoundError:
        sys.exit("Error: VERSION file not found. Bye!")

    # check if file is empty
    if not content:
        sys.exit("Error: VERSION file is empty. Bye!")

    match = re.match(r"^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$", content)
    if not match:
        sys.exit("Error: VERSION file should follow the semantic versioning. Please check https://semver.org. Bye!")

    # save the value of the version file versio variable
    version = match.group()
    print(version)
    #sys.stdout.write(version)
check_version_file()
